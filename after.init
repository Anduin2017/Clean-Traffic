#!/bin/bash
#
# after.init: if executable, called by ufw-init. See 'man ufw-framework' for
#             details. Note that output from these scripts is not seen via the
#             the ufw command, but instead via ufw-init.
#
# Copyright 2013 Canonical Ltd.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License version 3,
#    as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# ufw-blocklist edition: IP blocklist extension for Ubuntu ufw
#  https://github.com/poddmo/ufw-blocklist
#
set -e

export ipsetname=ufw-blocklist-ipsum
export ip6setname=ufw-blocklist-ipsum-ipv6
export IPSET_EXE="/sbin/ipset"
# check ipset exists and is executable
[ -x "$IPSET_EXE" ] || {
    echo "$IPSET_EXE is not executable"
    exit 1
}

# Function to check if a chain exists (chain_exists ufw_blocklist_input && action if true || action if false)
chain_exists()    { iptables  -n --list "$1" >/dev/null 2>&1; }
chain_exists_v6() { ip6tables -n --list "$1" >/dev/null 2>&1; }
set_exists() { ipset list "$1" -name >/dev/null 2>&1; }

case "$1" in
start)
    # Call start_v4 and start_v6 functions
    /bin/bash "$0" start_v4
    /bin/bash "$0" start_v6
    ;;
start_v4)
    # --- IPv4 Setup ---
    $IPSET_EXE create $ipsetname hash:net -exist && $IPSET_EXE flush $ipsetname
    # INPUT
    if chain_exists ufw-blocklist-input; then
        iptables -D INPUT -m set --match-set $ipsetname src -j ufw-blocklist-input || true
        iptables -F ufw-blocklist-input && iptables -X ufw-blocklist-input
    fi
    iptables -N ufw-blocklist-input
    iptables -A ufw-blocklist-input -j DROP -m comment --comment "ufw-blocklist-input"
    iptables -I INPUT 1 -m set --match-set $ipsetname src -j ufw-blocklist-input
    # OUTPUT
    if chain_exists ufw-blocklist-output; then
        iptables -D OUTPUT -m set --match-set $ipsetname dst -j ufw-blocklist-output || true
        iptables -F ufw-blocklist-output && iptables -X ufw-blocklist-output
    fi
    iptables -N ufw-blocklist-output
    iptables -A ufw-blocklist-output -j LOG --log-level 3 --log-prefix "[UFW BLOCKLIST OUTPUT] " -m limit --limit 3/minute --limit-burst 10
    iptables -A ufw-blocklist-output -j DROP -m comment --comment "ufw-blocklist-output"
    iptables -I OUTPUT 1 -m set --match-set $ipsetname dst -j ufw-blocklist-output
    # FORWARD
    if chain_exists ufw-blocklist-forward; then
        iptables -D FORWARD -m set --match-set $ipsetname dst -j ufw-blocklist-forward || true
        iptables -F ufw-blocklist-forward && iptables -X ufw-blocklist-forward
    fi
    iptables -N ufw-blocklist-forward
    iptables -A ufw-blocklist-forward -j LOG --log-level 3 --log-prefix "[UFW BLOCKLIST FORWARD] " -m limit --limit 3/minute --limit-burst 10
    iptables -A ufw-blocklist-forward -j DROP -m comment --comment "ufw-blocklist-forward"
    iptables -I FORWARD 1 -m set --match-set $ipsetname dst -j ufw-blocklist-forward
    ;;
start_v6)
    # --- IPv6 Setup ---
    $IPSET_EXE create $ip6setname hash:net family inet6 -exist && $IPSET_EXE flush $ip6setname
    # INPUT
    if chain_exists_v6 ufw-blocklist-input; then
        ip6tables -D INPUT -m set --match-set $ip6setname src -j ufw-blocklist-input || true
        ip6tables -F ufw-blocklist-input && ip6tables -X ufw-blocklist-input
    fi
    ip6tables -N ufw-blocklist-input
    ip6tables -A ufw-blocklist-input -j DROP -m comment --comment "ufw-blocklist-input"
    ip6tables -I INPUT 1 -m set --match-set $ip6setname src -j ufw-blocklist-input
    # OUTPUT
    if chain_exists_v6 ufw-blocklist-output; then
        ip6tables -D OUTPUT -m set --match-set $ip6setname dst -j ufw-blocklist-output || true
        ip6tables -F ufw-blocklist-output && ip6tables -X ufw-blocklist-output
    fi
    ip6tables -N ufw-blocklist-output
    ip6tables -A ufw-blocklist-output -j LOG --log-level 3 --log-prefix "[UFW BLOCKLIST OUTPUT v6] " -m limit --limit 3/minute --limit-burst 10
    ip6tables -A ufw-blocklist-output -j DROP -m comment --comment "ufw-blocklist-output"
    ip6tables -I OUTPUT 1 -m set --match-set $ip6setname dst -j ufw-blocklist-output
    # FORWARD
    if chain_exists_v6 ufw-blocklist-forward; then
        ip6tables -D FORWARD -m set --match-set $ip6setname dst -j ufw-blocklist-forward || true
        ip6tables -F ufw-blocklist-forward && ip6tables -X ufw-blocklist-forward
    fi
    ip6tables -N ufw-blocklist-forward
    ip6tables -A ufw-blocklist-forward -j LOG --log-level 3 --log-prefix "[UFW BLOCKLIST FORWARD v6] " -m limit --limit 3/minute --limit-burst 10
    ip6tables -A ufw-blocklist-forward -j DROP -m comment --comment "ufw-blocklist-forward"
    ip6tables -I FORWARD 1 -m set --match-set $ip6setname dst -j ufw-blocklist-forward
    ;;
stop)
    # --- IPv4 Teardown ---
    if chain_exists ufw-blocklist-input; then iptables -D INPUT -m set --match-set $ipsetname src -j ufw-blocklist-input || true; fi
    if chain_exists ufw-blocklist-output; then iptables -D OUTPUT -m set --match-set $ipsetname dst -j ufw-blocklist-output || true; fi
    if chain_exists ufw-blocklist-forward; then iptables -D FORWARD -m set --match-set $ipsetname dst -j ufw-blocklist-forward || true; fi
    if chain_exists ufw-blocklist-input; then iptables -F ufw-blocklist-input && iptables -X ufw-blocklist-input; fi
    if chain_exists ufw-blocklist-output; then iptables -F ufw-blocklist-output && iptables -X ufw-blocklist-output; fi
    if chain_exists ufw-blocklist-forward; then iptables -F ufw-blocklist-forward && iptables -X ufw-blocklist-forward; fi
    if set_exists $ipsetname; then $IPSET_EXE destroy $ipsetname; fi

    # --- IPv6 Teardown ---
    if chain_exists_v6 ufw-blocklist-input; then ip6tables -D INPUT -m set --match-set $ip6setname src -j ufw-blocklist-input || true; fi
    if chain_exists_v6 ufw-blocklist-output; then ip6tables -D OUTPUT -m set --match-set $ip6setname dst -j ufw-blocklist-output || true; fi
    if chain_exists_v6 ufw-blocklist-forward; then ip6tables -D FORWARD -m set --match-set $ip6setname dst -j ufw-blocklist-forward || true; fi
    if chain_exists_v6 ufw-blocklist-input; then ip6tables -F ufw-blocklist-input && ip6tables -X ufw-blocklist-input; fi
    if chain_exists_v6 ufw-blocklist-output; then ip6tables -F ufw-blocklist-output && ip6tables -X ufw-blocklist-output; fi
    if chain_exists_v6 ufw-blocklist-forward; then ip6tables -F ufw-blocklist-forward && ip6tables -X ufw-blocklist-forward; fi
    if set_exists $ip6setname; then $IPSET_EXE destroy $ip6setname; fi
    ;;
status)
    echo "--- IPv4 Status ---"
    $IPSET_EXE list "$ipsetname" -t || echo "ipset $ipsetname not found or not active."
    iptables -L -nvx | grep --color=never "$ipsetname" | grep 'match-set'
    
    echo -e "\n--- IPv6 Status ---"
    $IPSET_EXE list "$ip6setname" -t || echo "ipset $ip6setname not found or not active."
    ip6tables -L -nvx | grep --color=never "$ip6setname" | grep 'match-set'

    echo -e "\n--- Recent Log Entries ---"
    journalctl | grep -i blocklist | tail -n 100
    ;;
flush-all)
    echo "Flushing all blocklists and resetting counters..."
    # IPv4
    if set_exists $ipsetname; then $IPSET_EXE flush $ipsetname; fi
    for chain in ufw-blocklist-input ufw-blocklist-output ufw-blocklist-forward; do
        if chain_exists "$chain"; then iptables -Z "$chain"; fi
    done
    
    # IPv6
    if set_exists $ip6setname; then $IPSET_EXE flush $ip6setname; fi
    for chain in ufw-blocklist-input ufw-blocklist-output ufw-blocklist-forward; do
        if chain_exists_v6 "$chain"; then ip6tables -Z "$chain"; fi
    done
    ;;
*)
    echo "Usage: $0 {start|stop|status|flush-all}"
    ;;
esac